{
  "name": "digitalcluster",
  "description": "this is the digital ocean cluster provisioning",
  "templateType": "workloadCluster",
  "uuid": "dc38794f-dae8-42fd-bb77-b83439d95380",
  "isFolder": true,
  "version": "1.23",
  "cloudServiceProvider": "digitalocean",
  "types": [
    {
      "name": "workloadCluster",
      "uuid": "cbda3cea-e3e7-4432-8f99-75200f403086",
      "isFolder": true,
      "templateType": "workloadCluster",
      "cloudServiceProvider": "digitalocean",
      "packages": [
        {
          "name": "K8S-Deployment",
          "uuid": "4180529292",
          "isFolder": false,
          "packageType": "clusterdeployment",
          "templateType": ["workloadcluster", "managementcluster"],
          "version": "2.2.22",
          "cloudServiceProvider": "",
          "values": "cloud_formation_template = 'Amazon EKS Sample VPC - Private and Public subnets'\nParameters:\n  VpcBlock:\n    Type: String\n    Default: '192.168.0.0/16'\n    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.\n  PublicSubnet01Block:\n    Type: String\n    Default: '192.168.0.0/18'\n    Description: CidrBlock for public subnet 01 within the VPC\n  PublicSubnet02Block:\n    Type: String\n    Default: '192.168.64.0/18'\n    Description: CidrBlock for public subnet 02 within the VPC\n  PrivateSubnet01Block:\n    Type: String\n    Default: '192.168.128.0/18'\n    Description: CidrBlock for private subnet 01 within the VPC\n  PrivateSubnet02Block:\n    Type: String\n    Default: '192.168.192.0/18'\n    Description: CidrBlock for private subnet 02 within the VPC\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      -\n        Label:\n          default: \"Worker Network Configuration\"\n        Parameters:\n          - VpcBlock\n          - PublicSubnet01Block\n          - PublicSubnet02Block\n          - PrivateSubnet01Block\n          - PrivateSubnet02Block\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock:  !Ref VpcBlock\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-VPC'\n  InternetGateway:\n    Type: \"AWS::EC2::InternetGateway\"\n  VPCGatewayAttachment:\n    Type: \"AWS::EC2::VPCGatewayAttachment\"\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n  PublicRouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Public Subnets\n      - Key: Network\n        Value: Public\n  PrivateRouteTable01:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ1\n      - Key: Network\n        Value: Private01\n  PrivateRouteTable02:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ2\n      - Key: Network\n        Value: Private02\n  PublicRoute:\n    DependsOn: VPCGatewayAttachment\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PublicRouteTable\n      DestinationCidrBlock: '0.0.0.0/0'\n      GatewayId: !Ref InternetGateway\n  PrivateRoute01:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway01\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable01\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway01\n  PrivateRoute02:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway02\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable02\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway02\n  NatGateway01:\n    DependsOn:\n    - NatGatewayEIP1\n    - PublicSubnet01\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP1.AllocationId'\n      SubnetId: !Ref PublicSubnet01\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ1'\n  NatGateway02:\n    DependsOn:\n    - NatGatewayEIP2\n    - PublicSubnet02\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP2.AllocationId'\n      SubnetId: !Ref PublicSubnet02\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ2'\n  NatGatewayEIP1:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  NatGatewayEIP2:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  PublicSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 01\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet01\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PublicSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 02\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet02\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PrivateSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 03\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet01\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PrivateSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Private Subnet 02\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet02\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PublicSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet01\n      RouteTableId: !Ref PublicRouteTable\n  PublicSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet02\n      RouteTableId: !Ref PublicRouteTable\n  PrivateSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet01\n      RouteTableId: !Ref PrivateRouteTable01\n  PrivateSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet02\n      RouteTableId: !Ref PrivateRouteTable02\n  ControlPlanecloud_formation_template = 'Amazon EKS Sample VPC - Private and Public subnets'\nParameters:\n  VpcBlock:\n    Type: String\n    Default: '192.168.0.0/16'\n    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.\n  PublicSubnet01Block:\n    Type: String\n    Default: '192.168.0.0/18'\n    Description: CidrBlock for public subnet 01 within the VPC\n  PublicSubnet02Block:\n    Type: String\n    Default: '192.168.64.0/18'\n    Description: CidrBlock for public subnet 02 within the VPC\n  PrivateSubnet01Block:\n    Type: String\n    Default: '192.168.128.0/18'\n    Description: CidrBlock for private subnet 01 within the VPC\n  PrivateSubnet02Block:\n    Type: String\n    Default: '192.168.192.0/18'\n    Description: CidrBlock for private subnet 02 within the VPC\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      -\n        Label:\n          default: \"Worker Network Configuration\"\n        Parameters:\n          - VpcBlock\n          - PublicSubnet01Block\n          - PublicSubnet02Block\n          - PrivateSubnet01Block\n          - PrivateSubnet02Block\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock:  !Ref VpcBlock\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-VPC'\n  InternetGateway:\n    Type: \"AWS::EC2::InternetGateway\"\n  VPCGatewayAttachment:\n    Type: \"AWS::EC2::VPCGatewayAttachment\"\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n  PublicRouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Public Subnets\n      - Key: Network\n        Value: Public\n  PrivateRouteTable01:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ1\n      - Key: Network\n        Value: Private01\n  PrivateRouteTable02:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ2\n      - Key: Network\n        Value: Private02\n  PublicRoute:\n    DependsOn: VPCGatewayAttachment\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PublicRouteTable\n      DestinationCidrBlock: '0.0.0.0/0'\n      GatewayId: !Ref InternetGateway\n  PrivateRoute01:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway01\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable01\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway01\n  PrivateRoute02:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway02\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable02\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway02\n  NatGateway01:\n    DependsOn:\n    - NatGatewayEIP1\n    - PublicSubnet01\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP1.AllocationId'\n      SubnetId: !Ref PublicSubnet01\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ1'\n  NatGateway02:\n    DependsOn:\n    - NatGatewayEIP2\n    - PublicSubnet02\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP2.AllocationId'\n      SubnetId: !Ref PublicSubnet02\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ2'\n  NatGatewayEIP1:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  NatGatewayEIP2:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  PublicSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 01\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet01\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PublicSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 02\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet02\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PrivateSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 03\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet01\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PrivateSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Private Subnet 02\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet02\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PublicSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet01\n      RouteTableId: !Ref PublicRouteTable\n  PublicSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet02\n      RouteTableId: !Ref PublicRouteTable\n  PrivateSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet01\n      RouteTableId: !Ref PrivateRouteTable01\n  PrivateSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet02\n      RouteTableId: !Ref PrivateRouteTable02\n  ControlPlaneddd435345345345345345345cloud_formation_template = 'Amazon EKS Sample VPC - Private and Public subnets'\nParameters:\n  VpcBlock:\n    Type: String\n    Default: '192.168.0.0/16'\n    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.\n  PublicSubnet01Block:\n    Type: String\n    Default: '192.168.0.0/18'\n    Description: CidrBlock for public subnet 01 within the VPC\n  PublicSubnet02Block:\n    Type: String\n    Default: '192.168.64.0/18'\n    Description: CidrBlock for public subnet 02 within the VPC\n  PrivateSubnet01Block:\n    Type: String\n    Default: '192.168.128.0/18'\n    Description: CidrBlock for private subnet 01 within the VPC\n  PrivateSubnet02Block:\n    Type: String\n    Default: '192.168.192.0/18'\n    Description: CidrBlock for private subnet 02 within the VPC\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      -\n        Label:\n          default: \"Worker Network Configuration\"\n        Parameters:\n          - VpcBlock\n          - PublicSubnet01Block\n          - PublicSubnet02Block\n          - PrivateSubnet01Block\n          - PrivateSubnet02Block\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock:  !Ref VpcBlock\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-VPC'\n  InternetGateway:\n    Type: \"AWS::EC2::InternetGateway\"\n  VPCGatewayAttachment:\n    Type: \"AWS::EC2::VPCGatewayAttachment\"\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n  PublicRouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Public Subnets\n      - Key: Network\n        Value: Public\n  PrivateRouteTable01:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ1\n      - Key: Network\n        Value: Private01\n  PrivateRouteTable02:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ2\n      - Key: Network\n        Value: Private02\n  PublicRoute:\n    DependsOn: VPCGatewayAttachment\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PublicRouteTable\n      DestinationCidrBlock: '0.0.0.0/0'\n      GatewayId: !Ref InternetGateway\n  PrivateRoute01:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway01\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable01\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway01\n  PrivateRoute02:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway02\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable02\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway02\n  NatGateway01:\n    DependsOn:\n    - NatGatewayEIP1\n    - PublicSubnet01\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP1.AllocationId'\n      SubnetId: !Ref PublicSubnet01\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ1'\n  NatGateway02:\n    DependsOn:\n    - NatGatewayEIP2\n    - PublicSubnet02\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP2.AllocationId'\n      SubnetId: !Ref PublicSubnet02\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ2'\n  NatGatewayEIP1:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  NatGatewayEIP2:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  PublicSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 01\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet01\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PublicSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 02\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet02\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PrivateSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 03\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet01\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PrivateSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Private Subnet 02\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet02\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PublicSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet01\n      RouteTableId: !Ref PublicRouteTable\n  PublicSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet02\n      RouteTableId: !Ref PublicRouteTable\n  PrivateSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet01\n      RouteTableId: !Ref PrivateRouteTable01\n  PrivateSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet02\n      RouteTableId: !Ref PrivateRouteTable02\n  ControlPlanecloud_formation_template = 'Amazon EKS Sample VPC - Private and Public subnets'\nParameters:\n  VpcBlock:\n    Type: String\n    Default: '192.168.0.0/16'\n    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.\n  PublicSubnet01Block:\n    Type: String\n    Default: '192.168.0.0/18'\n    Description: CidrBlock for public subnet 01 within the VPC\n  PublicSubnet02Block:\n    Type: String\n    Default: '192.168.64.0/18'\n    Description: CidrBlock for public subnet 02 within the VPC\n  PrivateSubnet01Block:\n    Type: String\n    Default: '192.168.128.0/18'\n    Description: CidrBlock for private subnet 01 within the VPC\n  PrivateSubnet02Block:\n    Type: String\n    Default: '192.168.192.0/18'\n    Description: CidrBlock for private subnet 02 within the VPC\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      -\n        Label:\n          default: \"Worker Network Configuration\"\n        Parameters:\n          - VpcBlock\n          - PublicSubnet01Block\n          - PublicSubnet02Block\n          - PrivateSubnet01Block\n          - PrivateSubnet02Block\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock:  !Ref VpcBlock\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-VPC'\n  InternetGateway:\n    Type: \"AWS::EC2::InternetGateway\"\n  VPCGatewayAttachment:\n    Type: \"AWS::EC2::VPCGatewayAttachment\"\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n  PublicRouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Public Subnets\n      - Key: Network\n        Value: Public\n  PrivateRouteTable01:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ1\n      - Key: Network\n        Value: Private01\n  PrivateRouteTable02:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ2\n      - Key: Network\n        Value: Private02\n  PublicRoute:\n    DependsOn: VPCGatewayAttachment\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PublicRouteTable\n      DestinationCidrBlock: '0.0.0.0/0'\n      GatewayId: !Ref InternetGateway\n  PrivateRoute01:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway01\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable01\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway01\n  PrivateRoute02:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway02\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable02\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway02\n  NatGateway01:\n    DependsOn:\n    - NatGatewayEIP1\n    - PublicSubnet01\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP1.AllocationId'\n      SubnetId: !Ref PublicSubnet01\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ1'\n  NatGateway02:\n    DependsOn:\n    - NatGatewayEIP2\n    - PublicSubnet02\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP2.AllocationId'\n      SubnetId: !Ref PublicSubnet02\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ2'\n  NatGatewayEIP1:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  NatGatewayEIP2:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  PublicSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 01\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet01\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PublicSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 02\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet02\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PrivateSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 03\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet01\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PrivateSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Private Subnet 02\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet02\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PublicSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet01\n      RouteTableId: !Ref PublicRouteTable\n  PublicSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet02\n      RouteTableId: !Ref PublicRouteTable\n  PrivateSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet01\n      RouteTableId: !Ref PrivateRouteTable01\n  PrivateSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet02\n      RouteTableId: !Ref PrivateRouteTable02\n  ControlPlaneddd43534534534534534534czxczxcewr3450934583450921308921489021439082341 "
        },
        {
          "name": "calico2",
          "uuid": "3788387033",
          "isFolder": false,
          "packageType": "networkdeployment",
          "templateType": ["workloadcluster", "managementcluster"],
          "version": "2.2.22",
          "cloudServiceProvider": "",
          "values": "cloud_formation_template = 'Amazon EKS Sample VPC - Private and Public subnets'\nParameters:\n  VpcBlock:\n    Type: String\n    Default: '192.168.0.0/16'\n    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.\n  PublicSubnet01Block:\n    Type: String\n    Default: '192.168.0.0/18'\n    Description: CidrBlock for public subnet 01 within the VPC\n  PublicSubnet02Block:\n    Type: String\n    Default: '192.168.64.0/18'\n    Description: CidrBlock for public subnet 02 within the VPC\n  PrivateSubnet01Block:\n    Type: String\n    Default: '192.168.128.0/18'\n    Description: CidrBlock for private subnet 01 within the VPC\n  PrivateSubnet02Block:\n    Type: String\n    Default: '192.168.192.0/18'\n    Description: CidrBlock for private subnet 02 within the VPC\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      -\n        Label:\n          default: \"Worker Network Configuration\"\n        Parameters:\n          - VpcBlock\n          - PublicSubnet01Block\n          - PublicSubnet02Block\n          - PrivateSubnet01Block\n          - PrivateSubnet02Block\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock:  !Ref VpcBlock\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-VPC'\n  InternetGateway:\n    Type: \"AWS::EC2::InternetGateway\"\n  VPCGatewayAttachment:\n    Type: \"AWS::EC2::VPCGatewayAttachment\"\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n  PublicRouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Public Subnets\n      - Key: Network\n        Value: Public\n  PrivateRouteTable01:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ1\n      - Key: Network\n        Value: Private01\n  PrivateRouteTable02:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ2\n      - Key: Network\n        Value: Private02\n  PublicRoute:\n    DependsOn: VPCGatewayAttachment\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PublicRouteTable\n      DestinationCidrBlock: '0.0.0.0/0'\n      GatewayId: !Ref InternetGateway\n  PrivateRoute01:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway01\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable01\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway01\n  PrivateRoute02:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway02\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable02\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway02\n  NatGateway01:\n    DependsOn:\n    - NatGatewayEIP1\n    - PublicSubnet01\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP1.AllocationId'\n      SubnetId: !Ref PublicSubnet01\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ1'\n  NatGateway02:\n    DependsOn:\n    - NatGatewayEIP2\n    - PublicSubnet02\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP2.AllocationId'\n      SubnetId: !Ref PublicSubnet02\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ2'\n  NatGatewayEIP1:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  NatGatewayEIP2:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  PublicSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 01\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet01\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PublicSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 02\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet02\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PrivateSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 03\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet01\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PrivateSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Private Subnet 02\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet02\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PublicSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet01\n      RouteTableId: !Ref PublicRouteTable\n  PublicSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet02\n      RouteTableId: !Ref PublicRouteTable\n  PrivateSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet01\n      RouteTableId: !Ref PrivateRouteTable01\n  PrivateSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet02\n      RouteTableId: !Ref PrivateRouteTable02\n  ControlPlanecloud_formation_template = 'Amazon EKS Sample VPC - Private and Public subnets'\nParameters:\n  VpcBlock:\n    Type: String\n    Default: '192.168.0.0/16'\n    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.\n  PublicSubnet01Block:\n    Type: String\n    Default: '192.168.0.0/18'\n    Description: CidrBlock for public subnet 01 within the VPC\n  PublicSubnet02Block:\n    Type: String\n    Default: '192.168.64.0/18'\n    Description: CidrBlock for public subnet 02 within the VPC\n  PrivateSubnet01Block:\n    Type: String\n    Default: '192.168.128.0/18'\n    Description: CidrBlock for private subnet 01 within the VPC\n  PrivateSubnet02Block:\n    Type: String\n    Default: '192.168.192.0/18'\n    Description: CidrBlock for private subnet 02 within the VPC\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      -\n        Label:\n          default: \"Worker Network Configuration\"\n        Parameters:\n          - VpcBlock\n          - PublicSubnet01Block\n          - PublicSubnet02Block\n          - PrivateSubnet01Block\n          - PrivateSubnet02Block\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock:  !Ref VpcBlock\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-VPC'\n  InternetGateway:\n    Type: \"AWS::EC2::InternetGateway\"\n  VPCGatewayAttachment:\n    Type: \"AWS::EC2::VPCGatewayAttachment\"\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n  PublicRouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Public Subnets\n      - Key: Network\n        Value: Public\n  PrivateRouteTable01:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ1\n      - Key: Network\n        Value: Private01\n  PrivateRouteTable02:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ2\n      - Key: Network\n        Value: Private02\n  PublicRoute:\n    DependsOn: VPCGatewayAttachment\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PublicRouteTable\n      DestinationCidrBlock: '0.0.0.0/0'\n      GatewayId: !Ref InternetGateway\n  PrivateRoute01:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway01\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable01\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway01\n  PrivateRoute02:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway02\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable02\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway02\n  NatGateway01:\n    DependsOn:\n    - NatGatewayEIP1\n    - PublicSubnet01\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP1.AllocationId'\n      SubnetId: !Ref PublicSubnet01\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ1'\n  NatGateway02:\n    DependsOn:\n    - NatGatewayEIP2\n    - PublicSubnet02\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP2.AllocationId'\n      SubnetId: !Ref PublicSubnet02\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ2'\n  NatGatewayEIP1:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  NatGatewayEIP2:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  PublicSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 01\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet01\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PublicSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 02\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet02\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PrivateSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 03\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet01\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PrivateSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Private Subnet 02\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet02\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PublicSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet01\n      RouteTableId: !Ref PublicRouteTable\n  PublicSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet02\n      RouteTableId: !Ref PublicRouteTable\n  PrivateSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet01\n      RouteTableId: !Ref PrivateRouteTable01\n  PrivateSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet02\n      RouteTableId: !Ref PrivateRouteTable02\n  ControlPlaneddd435345345345345345345cloud_formation_template = 'Amazon EKS Sample VPC - Private and Public subnets'\nParameters:\n  VpcBlock:\n    Type: String\n    Default: '192.168.0.0/16'\n    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.\n  PublicSubnet01Block:\n    Type: String\n    Default: '192.168.0.0/18'\n    Description: CidrBlock for public subnet 01 within the VPC\n  PublicSubnet02Block:\n    Type: String\n    Default: '192.168.64.0/18'\n    Description: CidrBlock for public subnet 02 within the VPC\n  PrivateSubnet01Block:\n    Type: String\n    Default: '192.168.128.0/18'\n    Description: CidrBlock for private subnet 01 within the VPC\n  PrivateSubnet02Block:\n    Type: String\n    Default: '192.168.192.0/18'\n    Description: CidrBlock for private subnet 02 within the VPC\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      -\n        Label:\n          default: \"Worker Network Configuration\"\n        Parameters:\n          - VpcBlock\n          - PublicSubnet01Block\n          - PublicSubnet02Block\n          - PrivateSubnet01Block\n          - PrivateSubnet02Block\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock:  !Ref VpcBlock\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-VPC'\n  InternetGateway:\n    Type: \"AWS::EC2::InternetGateway\"\n  VPCGatewayAttachment:\n    Type: \"AWS::EC2::VPCGatewayAttachment\"\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n  PublicRouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Public Subnets\n      - Key: Network\n        Value: Public\n  PrivateRouteTable01:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ1\n      - Key: Network\n        Value: Private01\n  PrivateRouteTable02:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ2\n      - Key: Network\n        Value: Private02\n  PublicRoute:\n    DependsOn: VPCGatewayAttachment\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PublicRouteTable\n      DestinationCidrBlock: '0.0.0.0/0'\n      GatewayId: !Ref InternetGateway\n  PrivateRoute01:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway01\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable01\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway01\n  PrivateRoute02:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway02\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable02\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway02\n  NatGateway01:\n    DependsOn:\n    - NatGatewayEIP1\n    - PublicSubnet01\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP1.AllocationId'\n      SubnetId: !Ref PublicSubnet01\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ1'\n  NatGateway02:\n    DependsOn:\n    - NatGatewayEIP2\n    - PublicSubnet02\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP2.AllocationId'\n      SubnetId: !Ref PublicSubnet02\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ2'\n  NatGatewayEIP1:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  NatGatewayEIP2:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  PublicSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 01\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet01\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PublicSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 02\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet02\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PrivateSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 03\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet01\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PrivateSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Private Subnet 02\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet02\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PublicSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet01\n      RouteTableId: !Ref PublicRouteTable\n  PublicSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet02\n      RouteTableId: !Ref PublicRouteTable\n  PrivateSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet01\n      RouteTableId: !Ref PrivateRouteTable01\n  PrivateSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet02\n      RouteTableId: !Ref PrivateRouteTable02\n  ControlPlanecloud_formation_template = 'Amazon EKS Sample VPC - Private and Public subnets'\nParameters:\n  VpcBlock:\n    Type: String\n    Default: '192.168.0.0/16'\n    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.\n  PublicSubnet01Block:\n    Type: String\n    Default: '192.168.0.0/18'\n    Description: CidrBlock for public subnet 01 within the VPC\n  PublicSubnet02Block:\n    Type: String\n    Default: '192.168.64.0/18'\n    Description: CidrBlock for public subnet 02 within the VPC\n  PrivateSubnet01Block:\n    Type: String\n    Default: '192.168.128.0/18'\n    Description: CidrBlock for private subnet 01 within the VPC\n  PrivateSubnet02Block:\n    Type: String\n    Default: '192.168.192.0/18'\n    Description: CidrBlock for private subnet 02 within the VPC\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      -\n        Label:\n          default: \"Worker Network Configuration\"\n        Parameters:\n          - VpcBlock\n          - PublicSubnet01Block\n          - PublicSubnet02Block\n          - PrivateSubnet01Block\n          - PrivateSubnet02Block\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock:  !Ref VpcBlock\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-VPC'\n  InternetGateway:\n    Type: \"AWS::EC2::InternetGateway\"\n  VPCGatewayAttachment:\n    Type: \"AWS::EC2::VPCGatewayAttachment\"\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n  PublicRouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Public Subnets\n      - Key: Network\n        Value: Public\n  PrivateRouteTable01:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ1\n      - Key: Network\n        Value: Private01\n  PrivateRouteTable02:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ2\n      - Key: Network\n        Value: Private02\n  PublicRoute:\n    DependsOn: VPCGatewayAttachment\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PublicRouteTable\n      DestinationCidrBlock: '0.0.0.0/0'\n      GatewayId: !Ref InternetGateway\n  PrivateRoute01:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway01\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable01\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway01\n  PrivateRoute02:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway02\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable02\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway02\n  NatGateway01:\n    DependsOn:\n    - NatGatewayEIP1\n    - PublicSubnet01\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP1.AllocationId'\n      SubnetId: !Ref PublicSubnet01\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ1'\n  NatGateway02:\n    DependsOn:\n    - NatGatewayEIP2\n    - PublicSubnet02\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP2.AllocationId'\n      SubnetId: !Ref PublicSubnet02\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ2'\n  NatGatewayEIP1:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  NatGatewayEIP2:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  PublicSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 01\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet01\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PublicSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 02\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet02\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PrivateSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 03\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet01\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PrivateSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Private Subnet 02\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet02\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PublicSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet01\n      RouteTableId: !Ref PublicRouteTable\n  PublicSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet02\n      RouteTableId: !Ref PublicRouteTable\n  PrivateSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet01\n      RouteTableId: !Ref PrivateRouteTable01\n  PrivateSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet02\n      RouteTableId: !Ref PrivateRouteTable02\n  ControlPlaneddd43534534534534534534czxczxcewr3450934583450921308921489021439082341 "
        },
        {
          "name": "calico3",
          "uuid": "37883857033",
          "isFolder": false,
          "packageType": "networkdeployments",
          "templateType": ["workloadcluster", "managementcluster"],
          "version": "2.2.22",
          "cloudServiceProvider": "",
          "values": "cloud_formation_template = 'Amazon EKS Sample VPC - Private and Public subnets'\nParameters:\n  VpcBlock:\n    Type: String\n    Default: '192.168.0.0/16'\n    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.\n  PublicSubnet01Block:\n    Type: String\n    Default: '192.168.0.0/18'\n    Description: CidrBlock for public subnet 01 within the VPC\n  PublicSubnet02Block:\n    Type: String\n    Default: '192.168.64.0/18'\n    Description: CidrBlock for public subnet 02 within the VPC\n  PrivateSubnet01Block:\n    Type: String\n    Default: '192.168.128.0/18'\n    Description: CidrBlock for private subnet 01 within the VPC\n  PrivateSubnet02Block:\n    Type: String\n    Default: '192.168.192.0/18'\n    Description: CidrBlock for private subnet 02 within the VPC\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      -\n        Label:\n          default: \"Worker Network Configuration\"\n        Parameters:\n          - VpcBlock\n          - PublicSubnet01Block\n          - PublicSubnet02Block\n          - PrivateSubnet01Block\n          - PrivateSubnet02Block\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock:  !Ref VpcBlock\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-VPC'\n  InternetGateway:\n    Type: \"AWS::EC2::InternetGateway\"\n  VPCGatewayAttachment:\n    Type: \"AWS::EC2::VPCGatewayAttachment\"\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n  PublicRouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Public Subnets\n      - Key: Network\n        Value: Public\n  PrivateRouteTable01:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ1\n      - Key: Network\n        Value: Private01\n  PrivateRouteTable02:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ2\n      - Key: Network\n        Value: Private02\n  PublicRoute:\n    DependsOn: VPCGatewayAttachment\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PublicRouteTable\n      DestinationCidrBlock: '0.0.0.0/0'\n      GatewayId: !Ref InternetGateway\n  PrivateRoute01:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway01\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable01\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway01\n  PrivateRoute02:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway02\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable02\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway02\n  NatGateway01:\n    DependsOn:\n    - NatGatewayEIP1\n    - PublicSubnet01\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP1.AllocationId'\n      SubnetId: !Ref PublicSubnet01\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ1'\n  NatGateway02:\n    DependsOn:\n    - NatGatewayEIP2\n    - PublicSubnet02\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP2.AllocationId'\n      SubnetId: !Ref PublicSubnet02\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ2'\n  NatGatewayEIP1:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  NatGatewayEIP2:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  PublicSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 01\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet01\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PublicSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 02\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet02\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PrivateSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 03\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet01\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PrivateSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Private Subnet 02\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet02\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PublicSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet01\n      RouteTableId: !Ref PublicRouteTable\n  PublicSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet02\n      RouteTableId: !Ref PublicRouteTable\n  PrivateSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet01\n      RouteTableId: !Ref PrivateRouteTable01\n  PrivateSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet02\n      RouteTableId: !Ref PrivateRouteTable02\n  ControlPlanecloud_formation_template = 'Amazon EKS Sample VPC - Private and Public subnets'\nParameters:\n  VpcBlock:\n    Type: String\n    Default: '192.168.0.0/16'\n    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.\n  PublicSubnet01Block:\n    Type: String\n    Default: '192.168.0.0/18'\n    Description: CidrBlock for public subnet 01 within the VPC\n  PublicSubnet02Block:\n    Type: String\n    Default: '192.168.64.0/18'\n    Description: CidrBlock for public subnet 02 within the VPC\n  PrivateSubnet01Block:\n    Type: String\n    Default: '192.168.128.0/18'\n    Description: CidrBlock for private subnet 01 within the VPC\n  PrivateSubnet02Block:\n    Type: String\n    Default: '192.168.192.0/18'\n    Description: CidrBlock for private subnet 02 within the VPC\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      -\n        Label:\n          default: \"Worker Network Configuration\"\n        Parameters:\n          - VpcBlock\n          - PublicSubnet01Block\n          - PublicSubnet02Block\n          - PrivateSubnet01Block\n          - PrivateSubnet02Block\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock:  !Ref VpcBlock\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-VPC'\n  InternetGateway:\n    Type: \"AWS::EC2::InternetGateway\"\n  VPCGatewayAttachment:\n    Type: \"AWS::EC2::VPCGatewayAttachment\"\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n  PublicRouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Public Subnets\n      - Key: Network\n        Value: Public\n  PrivateRouteTable01:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ1\n      - Key: Network\n        Value: Private01\n  PrivateRouteTable02:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ2\n      - Key: Network\n        Value: Private02\n  PublicRoute:\n    DependsOn: VPCGatewayAttachment\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PublicRouteTable\n      DestinationCidrBlock: '0.0.0.0/0'\n      GatewayId: !Ref InternetGateway\n  PrivateRoute01:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway01\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable01\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway01\n  PrivateRoute02:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway02\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable02\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway02\n  NatGateway01:\n    DependsOn:\n    - NatGatewayEIP1\n    - PublicSubnet01\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP1.AllocationId'\n      SubnetId: !Ref PublicSubnet01\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ1'\n  NatGateway02:\n    DependsOn:\n    - NatGatewayEIP2\n    - PublicSubnet02\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP2.AllocationId'\n      SubnetId: !Ref PublicSubnet02\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ2'\n  NatGatewayEIP1:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  NatGatewayEIP2:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  PublicSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 01\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet01\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PublicSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 02\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet02\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PrivateSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 03\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet01\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PrivateSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Private Subnet 02\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet02\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PublicSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet01\n      RouteTableId: !Ref PublicRouteTable\n  PublicSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet02\n      RouteTableId: !Ref PublicRouteTable\n  PrivateSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet01\n      RouteTableId: !Ref PrivateRouteTable01\n  PrivateSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet02\n      RouteTableId: !Ref PrivateRouteTable02\n  ControlPlaneddd435345345345345345345cloud_formation_template = 'Amazon EKS Sample VPC - Private and Public subnets'\nParameters:\n  VpcBlock:\n    Type: String\n    Default: '192.168.0.0/16'\n    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.\n  PublicSubnet01Block:\n    Type: String\n    Default: '192.168.0.0/18'\n    Description: CidrBlock for public subnet 01 within the VPC\n  PublicSubnet02Block:\n    Type: String\n    Default: '192.168.64.0/18'\n    Description: CidrBlock for public subnet 02 within the VPC\n  PrivateSubnet01Block:\n    Type: String\n    Default: '192.168.128.0/18'\n    Description: CidrBlock for private subnet 01 within the VPC\n  PrivateSubnet02Block:\n    Type: String\n    Default: '192.168.192.0/18'\n    Description: CidrBlock for private subnet 02 within the VPC\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      -\n        Label:\n          default: \"Worker Network Configuration\"\n        Parameters:\n          - VpcBlock\n          - PublicSubnet01Block\n          - PublicSubnet02Block\n          - PrivateSubnet01Block\n          - PrivateSubnet02Block\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock:  !Ref VpcBlock\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-VPC'\n  InternetGateway:\n    Type: \"AWS::EC2::InternetGateway\"\n  VPCGatewayAttachment:\n    Type: \"AWS::EC2::VPCGatewayAttachment\"\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n  PublicRouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Public Subnets\n      - Key: Network\n        Value: Public\n  PrivateRouteTable01:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ1\n      - Key: Network\n        Value: Private01\n  PrivateRouteTable02:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ2\n      - Key: Network\n        Value: Private02\n  PublicRoute:\n    DependsOn: VPCGatewayAttachment\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PublicRouteTable\n      DestinationCidrBlock: '0.0.0.0/0'\n      GatewayId: !Ref InternetGateway\n  PrivateRoute01:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway01\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable01\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway01\n  PrivateRoute02:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway02\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable02\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway02\n  NatGateway01:\n    DependsOn:\n    - NatGatewayEIP1\n    - PublicSubnet01\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP1.AllocationId'\n      SubnetId: !Ref PublicSubnet01\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ1'\n  NatGateway02:\n    DependsOn:\n    - NatGatewayEIP2\n    - PublicSubnet02\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP2.AllocationId'\n      SubnetId: !Ref PublicSubnet02\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ2'\n  NatGatewayEIP1:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  NatGatewayEIP2:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  PublicSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 01\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet01\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PublicSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 02\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet02\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PrivateSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 03\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet01\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PrivateSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Private Subnet 02\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet02\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PublicSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet01\n      RouteTableId: !Ref PublicRouteTable\n  PublicSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet02\n      RouteTableId: !Ref PublicRouteTable\n  PrivateSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet01\n      RouteTableId: !Ref PrivateRouteTable01\n  PrivateSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet02\n      RouteTableId: !Ref PrivateRouteTable02\n  ControlPlanecloud_formation_template = 'Amazon EKS Sample VPC - Private and Public subnets'\nParameters:\n  VpcBlock:\n    Type: String\n    Default: '192.168.0.0/16'\n    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.\n  PublicSubnet01Block:\n    Type: String\n    Default: '192.168.0.0/18'\n    Description: CidrBlock for public subnet 01 within the VPC\n  PublicSubnet02Block:\n    Type: String\n    Default: '192.168.64.0/18'\n    Description: CidrBlock for public subnet 02 within the VPC\n  PrivateSubnet01Block:\n    Type: String\n    Default: '192.168.128.0/18'\n    Description: CidrBlock for private subnet 01 within the VPC\n  PrivateSubnet02Block:\n    Type: String\n    Default: '192.168.192.0/18'\n    Description: CidrBlock for private subnet 02 within the VPC\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      -\n        Label:\n          default: \"Worker Network Configuration\"\n        Parameters:\n          - VpcBlock\n          - PublicSubnet01Block\n          - PublicSubnet02Block\n          - PrivateSubnet01Block\n          - PrivateSubnet02Block\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock:  !Ref VpcBlock\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-VPC'\n  InternetGateway:\n    Type: \"AWS::EC2::InternetGateway\"\n  VPCGatewayAttachment:\n    Type: \"AWS::EC2::VPCGatewayAttachment\"\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n  PublicRouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Public Subnets\n      - Key: Network\n        Value: Public\n  PrivateRouteTable01:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ1\n      - Key: Network\n        Value: Private01\n  PrivateRouteTable02:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private Subnet AZ2\n      - Key: Network\n        Value: Private02\n  PublicRoute:\n    DependsOn: VPCGatewayAttachment\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PublicRouteTable\n      DestinationCidrBlock: '0.0.0.0/0'\n      GatewayId: !Ref InternetGateway\n  PrivateRoute01:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway01\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable01\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway01\n  PrivateRoute02:\n    DependsOn:\n    - VPCGatewayAttachment\n    - NatGateway02\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable02\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway02\n  NatGateway01:\n    DependsOn:\n    - NatGatewayEIP1\n    - PublicSubnet01\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP1.AllocationId'\n      SubnetId: !Ref PublicSubnet01\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ1'\n  NatGateway02:\n    DependsOn:\n    - NatGatewayEIP2\n    - PublicSubnet02\n    - VPCGatewayAttachment\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt 'NatGatewayEIP2.AllocationId'\n      SubnetId: !Ref PublicSubnet02\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-NatGatewayAZ2'\n  NatGatewayEIP1:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  NatGatewayEIP2:\n    DependsOn:\n    - VPCGatewayAttachment\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  PublicSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 01\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet01\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PublicSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 02\n    Properties:\n      MapPublicIpOnLaunch: true\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PublicSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PublicSubnet02\"\n      - Key: kubernetes.io/role/elb\n        Value: '1'\n  PrivateSubnet01:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Subnet 03\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '0'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet01\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PrivateSubnet02:\n    Type: AWS::EC2::Subnet\n    Metadata:\n      Comment: Private Subnet 02\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n        - '1'\n        - Fn::GetAZs:\n            Ref: AWS::Region\n      CidrBlock:\n        Ref: PrivateSubnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n      - Key: Name\n        Value: !Sub \"${AWS::StackName}-PrivateSubnet02\"\n      - Key: kubernetes.io/role/internal-elb\n        Value: '1'\n  PublicSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet01\n      RouteTableId: !Ref PublicRouteTable\n  PublicSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet02\n      RouteTableId: !Ref PublicRouteTable\n  PrivateSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet01\n      RouteTableId: !Ref PrivateRouteTable01\n  PrivateSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PrivateSubnet02\n      RouteTableId: !Ref PrivateRouteTable02\n  ControlPlaneddd43534534534534534534czxczxcewr3450934583450921308921489021439082341 "
        }
      ]
    }
  ]
}
